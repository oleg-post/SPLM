.. highlight:: shell

============
Установка
============

Подготовка
------------

Прежде чем начать установку убедитесь что у вас установлены пакеты "git" и "Apache". Если их нет, то выполните их установку.
Эту и все последующие установочные команды будем выполнять от пользователя root на примере ОС Ubuntu 18:

.. code-block:: console

    $ sudo -i
    # apt install git
    # apt install apache2
    # systemctl enable apache2

1) Клонируем портал на локальный компьютер
------------
Загрузите исходный код с git, находясь в папке "opt":

.. code-block:: console
    
    # cd /opt/
    # git clone https://github.com/sp4plm/SPLM

и перейдите в директорию проекта:

.. code-block:: console

    # cd SPLM

2) Устанавливаем пакеты вируальной среды
------------
Подготовьте виртуальное окружение VirtualEnv для Python. Желательно иметь версию Python 3.7 или следующую. Дополнительно смотрите: https://python-scripts.com/virtualenv. Если у вас уже есть необходиммая версия Python, то первую команду из указанных ниже можно пропустить. Создайте виртуальную среду (virtual environment):

.. code-block:: console

    # apt install python3.8
    # apt install python3-venv
    # apt install python3.8-venv


3) Разворачиваем виртуальную среду
------------
Разворачиваем в папке "venv" среду для соответствующей версии Pythonи и активируем ее:

.. code-block:: console

    # mkdir venv
    # python3.8 -m venv venv
    # source venv/bin/activate

После выполнения последней команды в адресной строке терминала перед именем пользователя должна появиться надпись "(venv)" без кавычек. Это значит что дальнейшие команды будут выполняться в запущенной виртуальной среде.

4) Устанавливаем дополнительные пакеты:
------------

Устанавливаем необходимые дополнительные пакеты для приложения (python dependencies):

Чтобы установка из пакета "requirements.txt" прошла гладко необходимо обновить следующие пакеты:

.. code-block:: console

    pip install pip --upgrade
    pip install setuptools --upgrade

И затем выполняем собственно установку всех необходимых пакетов:

.. code-block:: console

    # pip install -r requirements.txt

5) Запускаем приложение:
------------

.. code-block:: console

    # python3 run.py
    
Если все прошло успешно, то в терминале появится информация о запуске приложения в отладочном режиме:

.. image:: images/screenshot_1.png
  :width: 90 %
  :align: center

Для запуска приложения в рабочем режиме скорректируйте файл run.py в соответствии с документацией на Flask.

.. code-block:: console

    # nano run.py


Если передти по указанной выше ссылке http://127.0.0.1:5001 то попадете на следующую страничку портала:

.. image:: images/screenshot_2.png
  :width: 90 %
  :align: center

6) Запускаем установщик портала:
------------

В строке браузера указываем путь http://127.0.0.1:5001/portlal/installer

в появившемся окне нажимаем единственную кнопку и ждем несколько секунд ...

.. image:: images/screenshot_3.png
  :width: 90 %
  :align: center

Через несколько секунд дожно появится сообщение об окончании кофиигурирования:

.. image:: images/screenshot_4.png
  :width: 90 %
  :align: center

7) Административная часть портала
------------
Для входа в административную часть портала и настройки приложения укажите следующий адрес:

http://127.0.0.1:5001/portal

для входа используйте логин **manager** и пароль **testadmin**

.. image:: images/screenshot_5.png
  :width: 90 %
  :align: center

8) Остановка портала
------------

Останавливаем портал и виртуальное окружение:

Для этого в окне терминала нажимаем сосчетание клавиш CTR+C

И выполняем команду выхода из виртуального окружения:

.. code-block:: console

    # deactivate
    
Теперь надпись "(venv)" перед именем пользователя должна исчезнуть.
