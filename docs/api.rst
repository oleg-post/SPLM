API документация
=================


Настройка прав доступа по URL
````````````````````````````````

Следует различать несколько видов URL, отличающихся доступностью:
    * открытый - URL  доступный всем без авторизации;
    * закрытый - URL  доступный только авторизованным пользователям;
    * ограниченный  - URL  доступный только авторизованным пользователям, с определенными ролями.

Для создания URL с закрытым вариантом доступа требуется указать специальный декоратор перед определением обработчика URL.

Специальный декоратор можно получить с помощью функции get_auth_decorator из API приложения (модуль app_api в корне приложения).

Пример кода обработчика URL::

    _auth_decorator = app_api.get_auth_decorator()

    @mod.route('/test/handler', methods=['GET'])
    @_auth_decorator
    def test_handler():
        """
        Тело обработчика
        """
        return ''

Для создания  URL с ограниченным вариантом доступа помимо использования специального декоратора, как в закрытом варианте, требуется указать роль(роли) для которых будет доступен данный URL.

Указать перечень ролей для доступа к определенному URL возможно только в dublin.ttl с помощью отношения ``splm:isAvailableFor``, например:
``splm:mod_url splm:isAvailableFor “role”``.
где splm:mod_url -  URL  модуля для которого требуется предоставить для определенной роли, а “role”  наименование роли которой требуется предоставить доступ (возможность получить ответ от сервера по указанному URL).
Для предоставления доступа к URL больше чем одной роли требуется повторить запись по количеству ролей в dublin.ttl.

Важно! При отрисовке страницы вывод элементов навигации учитывает роли, указанные для URL и отображает только те элементы, которые доступны текущему пользователю на основании ролей.

.. caution:: Проверка на соответствие ролей для URL с ролями назначенными текущему пользователю находится в зоне ответственности разработчика обработчика URL.

Пример кода проверки ролей текущего пользователя::

    if g.user:
        if g.user.has_role('role'):
