{
	"list": {
		"_CMT_": "Список документов по контракту. Страница /contract_reqs.php",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "select ?doc ?doc_cls ?doc_lbl ?docname_lbl ?lev ?topic {
                    ?doc a onto:TZ .
                    ?doc a ?doc_cls .
                    ?doc rdfs:label ?doc_lbl .
                    ?doc onto:hasAttribute ?att .
                    ?att a onto:DocumentName .
                    ?att onto:hasAttributeValue ?val .
                    ?val rdfs:label ?docname_lbl .
                    ?ver onto:isFromDoc ?doc .
                    ?ver onto:latestVersion xs:true .
                    ?txt onto:hasVersion ?ver .
                    ?doc onto:hasAttribute ?att2 .
                    ?att2 onto:hasAttributeValue ?val2 .
                    ?val2 onto:value ?lev .
                    ?att2 a onto:DocumentationPlanHierarchy .
                    ?doc onto:hasAttribute ?att3 .
                    ?att3 rdf:type onto:Topic .
                    ?att3 onto:hasAttributeValue/rdfs:label ?topic .
                } group by ?doc ?doc_cls ?doc_lbl ?docname_lbl ?lev ?topic order by ?lev ?doc_lbl"
	},
	"doc_reqs": {
		"_CMT_": "Список требований по документу контракта. Страница /contract_doc.php",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "SELECT DISTINCT ?seq ?typ_lbl ?item_lbl ?item ?ver_lbl ?loc ?dbs ?version ?verNew ?verNew_cls ?verNew_lbl {
                    ?item rdfs:label ?item_lbl .
                    ?item a ?typ .
                    ?typ rdfs:subClassOf onto:TextItem .
                    ?typ rdfs:label ?typ_lbl .
                    ?item onto:hasVersion ?ver .
                    ?ver onto:isFromDoc <#{URI}> .
                    ?ver onto:value ?version .
                    ?ver onto:hasAttribute ?att_s .
                    ?att_s onto:hasAttributeValue ?s_val .
                    ?att_s a onto:SequenceNumber .
                    ?s_val onto:value ?seq .
                    Optional {
                        ?item onto:hasVersion ?verNew . filter (?verNew != ?ver)
                        ?verNew onto:latestVersion xs:true .
                        ?verNew onto:value ?verNew_lbl . 
                        ?verNew rdf:type ?verNew_cls .
                    } .
                    OPTIONAL {
                        ?ver onto:hasAttribute ?att_l .
                        ?att_l onto:hasAttributeValue ?dbs_val .
                        ?att_l a onto:DBS .
                        ?dbs_val onto:value ?dbs .
                    }
                    Optional { ?ver rdfs:label ?ver_lbl . }
                } order by ?seq"
	},
	"info": {
		"_CMT_": "информация о документе по контракту. Страница /contract_doc.php",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "select ?doc ?doc_cls ?doc_lbl ?docname_lbl {
                    ?doc a onto:TZ FILTER (?doc=<#{URI}>) .
                    ?doc a ?doc_cls .
                    ?doc rdfs:label ?doc_lbl .
                    ?doc onto:hasAttribute ?att .
                    ?att a onto:DocumentName .
                    ?att onto:hasAttributeValue ?val .
                    ?val rdfs:label ?docname_lbl .
                    ?ver onto:isFromDoc ?doc .
                    ?ver onto:latestVersion xs:true .
                    ?txt onto:hasVersion ?ver .
                } group by ?doc ?doc_cls ?doc_lbl ?docname_lbl order by ?doc_lbl"
	},
	"per_contractor": {
		"_CMT_": "Распределение требований по исполнителям. Страница /contract_doc.php",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "select distinct ?seq ?typ_lbl ?item_lbl ?item ?ver_lbl ?comp ?att_si_val ?att_vm_val ?att_ql_val ?att_rq_val ?verval ?criterion ?verid {
                    ?typ rdfs:subClassOf onto:TextItem .
                    ?item rdfs:label ?item_lbl .
                    ?item a ?typ .
                    ?item onto:isCreatedIn <#{URI}>   .
                    ?typ rdfs:label ?typ_lbl .
                    ?item onto:hasVersion ?ver .
                    ?ver onto:latestVersion xs:true .
                    ?ver onto:hasAttribute ?att_s .
                    ?ver rdfs:label ?ver_lbl .
                    ?att_s a onto:SequenceNumber .
                    ?att_s onto:hasAttributeValue/onto:value ?seq .
                    Optional { ?ver onto:hasAttribute ?att_si . ?att_si a onto:SafetyImpact . ?att_si onto:hasAttributeValue/rdfs:label ?att_si_val .} .
                    Optional { ?ver onto:hasAttribute ?att_rq . ?att_rq a onto:RequirementsCategory . ?att_rq onto:hasAttributeValue/rdfs:label ?att_rq_val .} .
                    Optional { ?ver onto:hasAttribute ?att_vm . ?att_vm a onto:VerificationMethod . ?att_vm onto:hasAttributeValue/rdfs:label ?att_vm_val .} .
                    Optional { ?ver onto:hasAttribute ?att_ql . ?att_ql a onto:RequirementsQualityLevel . ?att_ql onto:hasAttributeValue/rdfs:label ?att_ql_val .} .
                    Optional {
                        { select distinct ?item (group_concat(?cnc; separator=\"; \") as ?comp)                                    
                            where {
                                ?item onto:hasReqImplementer ?impl .
                                ?item onto:isCreatedIn <#{URI}> .
                                ?item onto:hasVersion ?ver .
                                ?ver onto:latestVersion xs:true .
                                ?impl rdfs:label ?impl_lbl .
                                BIND (CONCAT(STR(?impl), \", \", ?impl_lbl) as ?cnc ).
                            } group by ?item
                        }
                    } .
                    ?ver onto:value ?verval .
                    OPTIONAL {
                        ?ver onto:hasCriterion ?crio .
                        ?crio onto:value ?criterion .
                    }
                    BIND(STR(?ver) as ?verid) .
                } order by ?seq"
	},
	"reqs_allocate": {
		"_CMT_": "Распределение требований по исполнителям. Страница /normdoc.php",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "select (SUM(?req) as ?allocated_req ) (group_concat(?company_lbl; separator=\"; \") as ?com_list) {
                    select distinct ?company_lbl (count(?item) as ?req) {
                        ?item a onto:Requirement .
                        ?item onto:hasVersion ?ver .
                        ?ver onto:latestVersion xs:true .
                        ?ver onto:isFromDoc <#{URI}> .
                        ?item onto:hasReqImplementer ?company .
                        ?company rdfs:label ?company_lbl .
                    } group by ?company_lbl
                }"
	},
	"repdocs_plan": {
		"_CMT_": "Ведомость запланированных отчетных документов. Страница /documents/contract",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "SELECT ?rc_lbl ?cls_lbl ?plan_lbl ?company_lbl  {
                    <#{URI}> onto:hasDocumentationPlan ?dp .
                    ?dp onto:hasRecord ?rc .
                    ?rc rdfs:label ?rc_lbl .
                    ?rc onto:hasPlanResult ?plan .
                    ?plan a ?plan_cls .
                    ?plan_cls rdfs:label ?cls_lbl .
                    ?plan rdfs:label ?plan_lbl .
                    Optional {
                        ?plan onto:hasContractor ?cmp .
                        ?cmp rdfs:label ?company_lbl .
                    }
                } order by ?rc_lbl"
	},
	"repdocs_fact": {
		"_CMT_": "Ведомось полученных отчетных документов по контракту (ТЗ). Страница /documents/contract",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "SELECT ?rc_lbl ?cls_lbl ?wr_ver ?wr_ver_cls ?wr_ver_lbl ?ver ?namew_lbl ?cmpn_cls ?cmpn_lbl ?link_lbl (COUNT (DISTINCT ?itemver) as ?reqs) ?docid ?tzid {
                    <#{URI}> onto:hasDocumentationPlan/onto:hasRecord ?rc .
                    ?rc rdfs:label ?rc_lbl .
                    ?rc onto:hasWorkResult ?wr .
                    ?wr a ?cls .
                    ?cls rdfs:label ?cls_lbl .
                    ?wr rdfs:label ?wr_ver_lbl .
                    ?wr onto:madeBy ?compn .
                    ?compn a ?cmpn_cls .
                    ?compn rdfs:label ?cmpn_lbl .
                    ?wr onto:hasVersion ?wr_ver .
                    ?wr_ver rdfs:label ?ver .
                    ?wr_ver a ?wr_ver_cls .
                    ?wr onto:hasAttribute ?namew .
                    ?namew a onto:DocumentName .
                    ?namew onto:hasAttributeValue/rdfs:label ?namew_lbl .
                    ?wr onto:hasAttribute ?link .
                    ?link a onto:StringURL .
                    ?link onto:hasAttributeValue/rdfs:label ?link_lbl1 .
                    BIND (CONCAT(\"<a href=\\\"\", STR(?link_lbl1), \"\\\" target=\\\"_blank\\\">ссылка</a>\") as ?link_lbl ) .
                    OPTIONAL {
                       ?itemver onto:isTracedTo ?wr_ver .                               
                       ?itemver onto:latestVersion xs:true .
                       ?item onto:hasVersion ?itemver .
                       ?item a onto:Requirement .
                    } .
                    BIND(STR(?wr_ver) as ?docid) .
                    BIND(STR(<#{URI}>) as ?tzid) .
                } GROUP BY ?rc_lbl ?cls_lbl ?wr_ver ?wr_ver_cls ?wr_ver_lbl ?ver ?namew_lbl ?cmpn_cls ?cmpn_lbl ?link_lbl ?docid ?tzid order by ?rc_lbl"
	},
	"extensions": {
		"_CMT_": "Возвращает список дополнительных соглашений к основному ТЗ. Страница /documents/contract",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "select DISTINCT ?doc ?doc_cls ?doc_lbl {
                    <#{URI}> onto:hasSupplementaryAgreement ?doc .
                        ?doc rdfs:label ?doc_lbl .
                        ?doc rdf:type ?doc_cls .
                        ?ver onto:isFromDoc ?doc .
                        ?ver onto:latestVersion xs:true .
                } ORDER BY ?doc_lbl"
	},
	"maindoc": {
		"_CMT_": "Возвращает информацию об основном ТЗ. Страница /documents/contract",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "select DISTINCT ?doc ?doc_cls ?doc_lbl {
                    ?doc onto:hasSupplementaryAgreement <#{URI}> .
                    ?doc rdfs:label ?doc_lbl .
                    ?doc rdf:type ?doc_cls .
                } ORDER BY ?doc_lbl"
	},
	"trace_debt": {
		"_CMT_": "требования без трассировок",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "SELECT DISTINCT ?item ?item_lbl ?item_cls ?ver_lbl
                {BIND (onto:Requirement as ?item_cls ) .
                ?item onto:isCreatedIn <#{URI}> .
                ?item a ?item_cls .
                ?item rdfs:label ?item_lbl .
                ?item onto:hasVersion ?ver .
                ?ver onto:latestVersion xs:true .
                ?ver rdfs:label ?ver_lbl .
                OPTIONAL {  ?ver onto:isTracedTo ?docv . } filter (!bound(?docv))
                }"
	},
	"verification_debt": {
		"_CMT_": "требования не имеющие верификации или с отрицательным заключением",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "SELECT DISTINCT ?item ?item_lbl ?item_cls ?ver_lbl ?status
                {                
                ?item a ?item_cls .
                ?item rdfs:label ?item_lbl .
                ?ver rdfs:label ?ver_lbl .
                { select ?item ?ver ?status {
                  ?item onto:isCreatedIn <#{URI}> .
                  ?item a onto:Requirement .
                  ?item onto:hasVersion ?ver .
                  ?ver onto:latestVersion xs:true .
                  BIND (\"Не проверялся\" as ?status)
                Optional { ?ver onto:hasSectionOfVerification ?s . } filter (!bound(?s)) 
                  }}
                  UNION
                { select ?item ?ver ?status {
                  ?item onto:isCreatedIn <#{URI}> .
                  ?item a onto:Requirement .
                  ?item onto:hasVersion ?ver .
                ?ver onto:latestVersion xs:true .
                ?ver onto:hasSectionOfVerification ?s .
                ?s a onto:DocVerificationReportSection .
                ?s onto:hasAttribute ?s_att .
                ?s_att a onto:Verification .
                ?s_att onto:hasAttributeValue/rdfs:label ?status . filter regex(?status, 'Нет')
                  }}
                }"
	},
	"docs_debt": {
		"_CMT_": "долги ТЗ по предоставлению отчетной документации",
		"#VARS": {
			"URI": {
				"mark": "#{URI}",
				"default": ""
			}
		},
		"#TXT": "select ?rec_no ?pr_lbl ?pr_cls_lbl {
                <#{URI}> onto:hasDocumentationPlan ?plan .
                ?plan onto:hasRecord ?s .
                ?s rdfs:label ?rec .
                BIND (STRDT(?rec, xsd:integer) as ?rec_no)
                ?s a onto:DocumentationPlanRecord .
                ?s onto:hasPlanResult ?pr .
                ?pr a ?pr_cls .
                ?pr_cls rdfs:label ?pr_cls_lbl .
                ?pr rdfs:label ?pr_lbl .
                Optional {?s onto:hasWorkResult ?wr .} filter (!bound(?wr))
                } order by ?rec_no"
	}
}