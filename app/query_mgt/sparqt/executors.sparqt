{
    "list" : {
        "_CMT_": "Список исполнителей. Страница /contractors.php",
        "#VARS":{},
        "#TXT":"SELECT ?company ?company_lbl ?company_cls ?name_lbl (count(DISTINCT ?item) as ?cnt ) {
                    ?company a onto:Organization .
                    ?company a ?company_cls .
                    ?company rdfs:label ?company_lbl .
                    OPTIONAL{
                        ?item onto:hasReqImplementer ?company .
                    }
                    ?company onto:hasAttribute ?att .
                    ?att a onto:OrganizationName .
                    ?att onto:hasAttributeValue ?val .
                    ?val rdfs:label ?name_lbl .
                } GROUP BY ?company ?company_lbl ?company_cls ?name_lbl ORDER BY ?company_lbl"
    },
    "sstat" : {
        "_CMT_": "Статистика: количество требований исполнителя по документам. Страница /contractor.php",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"SELECT ?tz ?tz_cls ?tz_lbl ?rc_lbl ?cls_lbl ?wr ?wr_lbl ?ver ?namew_lbl ?link_lbl (count(?itemver) as ?reqs) {
                    ?wr onto:madeBy <#{URI}> .
                    ?wr onto:hasVersion ?wr_ver .
                    ?wr onto:hasAttribute ?namew .
                    ?wr rdfs:label ?wr_lbl .
                    ?namew a onto:DocumentName .
                    ?namew onto:hasAttributeValue/rdfs:label ?namew_lbl .
                    ?wr onto:hasAttribute ?link .
                    ?link a onto:StringURL .
                    ?link onto:hasAttributeValue/rdfs:label ?link_lbl1 .
                    OPTIONAL {
                        ?tz onto:hasDocumentationPlan/onto:hasRecord ?rc .
                        ?tz rdfs:label ?tz_lbl .
                        ?tz a ?tz_cls .
                        ?rc rdfs:label ?rc_lbl .
                        ?rc onto:hasWorkResult ?wr .
                    }
                    ?wr a ?cls .
                    ?cls rdfs:label ?cls_lbl .
                    ?wr_ver rdfs:label ?ver .
                    ?wr_ver onto:latestVersion xs:true .
                    BIND (CONCAT(\"<a href=\\\"\", STR(?link_lbl1), \"\\\" target=\\\"_blank\\\">ссылка</a>\") as ?link_lbl ).
                    OPTIONAL {
                        ?itemver onto:isTracedTo ?wr_ver .                               
                        ?itemver onto:latestVersion xs:true .
                        ?item onto:hasVersion ?itemver .
                        ?item a onto:Requirement .
                    } .
                } GROUP BY ?tz ?tz_cls ?tz_lbl ?rc_lbl ?cls_lbl ?wr ?wr_lbl ?ver ?namew_lbl ?link_lbl order by ?rc_lbl"
    },
    "reqs" : {
        "_CMT_": "Список требований исполнителя, с указанием типа и документа. Страница /contractor.php",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"SELECT DISTINCT ?item ?item_lbl ?item_cls ?doc ?doc_lbl ?doc_cls ?seq ?text ?texttype_lbl {
                {
                    ?item onto:hasReqImplementer <#{URI}> .
                    ?item rdfs:label ?item_lbl .
                    ?item rdf:type ?item_cls .
                    ?item onto:hasVersion ?version .
                    ?version onto:latestVersion xs:true .
                    ?version onto:isFromDoc ?doc .
                    ?doc rdfs:label ?doc_lbl .
                    ?doc rdf:type ?doc_cls .
                    ?item a ?texttype .
                    ?texttype rdfs:label ?texttype_lbl .
                    OPTIONAL { ?version rdfs:label ?text . }
                    ?version onto:hasAttribute ?att .
                    ?att a onto:SequenceNumber .
                    ?att onto:hasAttributeValue ?attval .
                    ?attval onto:value ?seq .
                } UNION{
                    ?item onto:hasContractor <#{URI}> .
                    ?item rdfs:label ?item_lbl .
                    ?item rdf:type ?item_cls .
                    ?item onto:hasVersion ?version .
                    ?version onto:latestVersion xs:true .
                    ?version onto:isFromDoc ?doc .
                    ?doc rdfs:label ?doc_lbl .
                    ?doc rdf:type ?doc_cls .
                    ?item a ?texttype .
                    ?texttype rdfs:label ?texttype_lbl .
                    OPTIONAL { ?version rdfs:label ?text . }
                   OPTIONAL { ?version onto:hasAttribute ?att .
                    ?att a onto:SequenceNumber .
                    ?att onto:hasAttributeValue ?attval .
                    ?attval onto:value ?seq .}
                } UNION  {
                    ?item a onto:Title .
                    ?item rdfs:label ?item_lbl .
                    ?item rdf:type ?item_cls .
                    ?item onto:hasVersion ?version .
                    ?version onto:latestVersion xs:true .
                    ?version onto:isFromDoc ?doc .
                    ?doc rdfs:label ?doc_lbl .
                    ?doc rdf:type ?doc_cls .
                    ?item a ?texttype .
                    ?texttype rdfs:label ?texttype_lbl .
                    ?version onto:value ?verval .
                    OPTIONAL { ?version rdfs:label ?text . }
                    ?version onto:hasAttribute ?att .
                    ?att a onto:SequenceNumber .
                    ?att onto:hasAttributeValue ?attval .
                    ?attval onto:value ?seq .
                }
                } ORDER BY ?doc_lbl ?seq"
    },
    "devdoc_cnt" : {
        "_CMT_": "Количество разработанных документов. Страница /contractor.php",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"select  distinct (count(distinct ?namew) as ?developed) (count(distinct ?plan) as ?total) {
                    BIND(<#{URI}> as ?company) .
                    ?plan onto:hasContractor ?company .
                    ?plan a/rdfs:label ?cls_lbl .
                    ?rc onto:hasPlanResult ?plan .
                    Optional {
                        ?work onto:madeBy ?company .
                        ?work onto:hasAttribute ?namew .
                        ?namew a onto:DocumentName .
                        ?namew onto:hasAttributeValue/rdfs:label ?namew_lbl .
                    }
                } order by ?namew_lbl"
    },
    "devdoc_list" : {
        "_CMT_": "Список разработанных исполнителем документов. Страница /contractor.php",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"SELECT ?tz ?tz_cls ?tz_lbl ?rc_lbl ?cls_lbl ?plan_lbl {
                    ?plan onto:hasContractor <#{URI}> .
                    ?plan rdfs:label ?plan_lbl .
                    ?plan a/rdfs:label ?cls_lbl .
                    ?rc onto:hasPlanResult ?plan .
                    ?rc rdfs:label ?rc_lbl . 
                    ?dp onto:hasRecord ?rc .
                    ?tz onto:hasDocumentationPlan ?dp .
                    ?tz a ?tz_cls .
                    ?tz rdfs:label ?tz_lbl .
                } order by ?tz_lbl ?rc_lb"
    },
    "info" : {
        "_CMT_": "Информация об исполнителе. Страница /contractor.php",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"select ?id ?name ?role ?org_lbl{
                    BIND (<#{URI}> as ?org)
                    ?org onto:hasAttribute ?att1 .
                    ?org rdfs:label ?org_lbl .
                    ?att1 a onto:OrganizationName .
                    ?att1 onto:hasAttributeValue ?valname .
                    ?valname rdfs:label ?name . 
                    Optional {
                    ?org onto:hasAttribute ?att2 .
                    ?att2 a onto:ProjectRole .
                    ?att2 onto:hasAttributeValue ?valrole .
                    ?valrole rdfs:label ?role .
                    ?org onto:hasAttribute ?att3 .
                    ?att3 a onto:ID_Org .
                    ?att3 onto:hasAttributeValue ?idval .
                    ?idval onto:value ?id .
                    }
                }"
    },
    "assigreqs_cnt" : {
        "_CMT_": "Количество закрепленных требований. Страница /contractor.php",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"select  (count(DISTINCT ?req) as ?reqs)   {
                    BIND(<#{URI}> as ?company) .
                    ?req onto:hasReqImplementer ?company .
                    ?req a onto:Requirement .
                }"
    },
    "tracereqs_cnt" : {
        "_CMT_": "Количество связанных требований. Страница /contractor.php",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"SELECT (count(DISTINCT ?itemver) as ?reqs) {
                    BIND(<#{URI}> as ?company) .
                    ?prdoc onto:madeBy ?company .
                    ?prdoc onto:hasVersion ?prdocver .
                    ?prdocver onto:latestVersion xs:true .
                    ?prdocver rdf:type onto:DocumentVersion .
                    ?itemver onto:isTracedTo ?prdocver .
                    ?itemver onto:latestVersion xs:true .
                    ?item onto:hasVersion ?itemver .
                    ?item rdf:type onto:Requirement .
                }"
    },
    "tracedocs_cnt" : {
        "_CMT_": "Количество связанных документов. Страница /contractor.php",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"select (count(?prdoc) as ?tracedprdoc) {
                    select distinct ?prdoc {
                        BIND(<#{URI}> as ?company) .
                        ?prdoc onto:madeBy ?company .
                        ?prdoc onto:hasVersion ?prdocver .
                        ?prdocver onto:latestVersion xs:true .
                        ?prdocver rdf:type onto:DocumentVersion .
                        ?prdocver rdfs:label ?ver .
                        ?itemver onto:isTracedTo ?prdocver .
                        ?item onto:hasVersion ?itemver .
                        ?item rdf:type onto:Requirement .
                    }
                }"
    },
    "notalloc" : {
        "_CMT_": "Количество нераспределенных требований. Страница /contractors.php",
        "#VARS":{},
        "#TXT":"SELECT (count(distinct ?item) as ?stuk)  {
                    ?item a onto:Requirement .
                    Optional {?item onto:hasReqImplementer ?company } . FILTER(!bound(?company))
                    ?item onto:hasVersion ?ver .
                    ?ver onto:latestVersion xs:true .
                    ?ver onto:isFromDoc ?doc .
                    ?doc a onto:TZ .
                }"
    }
}
