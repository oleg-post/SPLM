{
    "one_instances":{
        "_CMT_":"Возвращает один экземпляр класса для определения префикса данных",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"select ?inst ?inst_lbl {
                ?inst a #{URI} .
                ?inst rdfs:label ?inst_lbl .
                } limit 1"
    },
    "list_of_instances":{
        "_CMT_":"Возвращает список экземпляров класса",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"select ?inst ?inst_lbl {
                ?inst a #{URI} .
                Optional {
                    ?inst rdfs:label ?inst_lbl . }
                } limit 200"
    },
    "instance":{
        "_CMT_":"Возвращает экземпляр класса",
        "#VARS":{"PREF":{"mark":"#{PREF}","default":""}, "URI":{"mark":"#{URI}","default":""}},
        "#TXT":"prefix onto: <#{PREF}>
                select distinct ?inst_lbl ?att_cls_lbl ?att_val where {
                ?uri rdfs:label ?inst_lbl . {
                select ?uri ?att_cls_lbl ?att_val {
                BIND (<#{URI}> as ?uri )
                Optional {
                  ?uri rdfs:comment ?att_val .
                  BIND ('Comment' as ?att_cls_lbl) . }}
                } UNION {
                 select ?uri ?att_cls_lbl ?att_val {
                BIND (<#{URI}> as ?uri )
                Optional {
                  ?uri onto:hasPrice ?att_val .
                  BIND ('Price' as ?att_cls_lbl) . }}
                } UNION {
                select ?uri ?att_cls_lbl ?att_val {
                  BIND (<#{URI}> as ?uri )
                  Optional {
                    ?uri onto:hasSize ?att_val .
                    BIND ('Size' as ?att_cls_lbl) . }}
                  } UNION {
                select ?uri ?att_cls_lbl ?att_val {
                  BIND (<#{URI}> as ?uri )
                  Optional {
                    ?uri onto:hasTopping ?topp .
                    ?topp rdfs:label ?top_lbl .
                    ?topp a ?topp_cls .
                    BIND (CONCAT(STR(?topp_cls), '&&', STR(?topp), '&&', ?top_lbl) as ?att_val )
                    BIND ('Topping' as ?att_cls_lbl) . }}
                  } UNION {
                select ?uri ?att_cls_lbl ?att_val {
                  BIND (<#{URI}> as ?uri )
                  Optional {
                    ?uri onto:hasBase ?base .
                    ?base rdfs:label ?base_lbl .
                    ?base a ?base_cls .
                    BIND (CONCAT(STR(?base_cls), '&&', STR(?base), '&&', ?base_lbl) as ?att_val )
                    BIND ('Base' as ?att_cls_lbl) . }}
                }}"
    },
    "list_of_subclasses":{
        "_CMT_":"Возвращает список экземпляров класса",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"select ?cls ?cls_lbl (count(distinct ?inst) as ?cnt)  {
                ?cls rdfs:subClassOf #{URI} .
                ?cls rdfs:label ?cls_lbl .
                Optional {?cls2 rdfs:subClassOf+ ?cls .
                        ?inst a ?cls2 .}
                Optional { ?inst a ?cls .}
                } group by ?cls ?cls_lbl order by ?cls"
    },
    "class_lbl":{
        "_CMT_":"Возвращает лейбл класса",
        "#VARS":{"URI":{"mark":"#{URI}","default":""}},
        "#TXT":"select ?cls_lbl {
                 #{URI} rdfs:label ?cls_lbl.
                } limit 1"
    }
}